======================================================
Filename: script8.txt
Running Test: Test String
Recursive: true

InspectClass: String
 Declaring Class: [N/A]
 Super-Class: Object
	InspectClass: Object
	 Declaring Class: [N/A]
	 Super-Class: [N/A]
	 Constructors: 
	 - public java.lang.Object()
	 Declared Methods: 
	 - protected void finalize() throws Throwable
	 - public final void wait() throws InterruptedException
	 - public final void wait(long, int) throws InterruptedException
	 - public final native void wait(long) throws InterruptedException
	 - public boolean equals(Object)
	 - public String toString()
	 - public native int hashCode()
	 - public final native Class getClass()
	 - protected native Object clone() throws CloneNotSupportedException
	 - public final native void notify()
	 - public final native void notifyAll()
	 - private static native void registerNatives()
	 Declared Fields: [N/A]
 Interface: Serializable
	InspectClass: Serializable
	 Declaring Class: [N/A]
	 Super-Class: [N/A]
	 Constructors: [N/A]
	 Declared Methods: [N/A]
	 Declared Fields: [N/A]
 Interface: Comparable
	InspectClass: Comparable
	 Declaring Class: [N/A]
	 Super-Class: [N/A]
	 Constructors: [N/A]
	 Declared Methods: 
	 - public abstract int compareTo(Object)
	 Declared Fields: [N/A]
 Interface: CharSequence
	InspectClass: CharSequence
	 Declaring Class: [N/A]
	 Super-Class: [N/A]
	 Constructors: [N/A]
	 Declared Methods: 
	 - public abstract String toString()
	 - public abstract char charAt(int)
	 - public abstract int length()
	 - public abstract CharSequence subSequence(int, int)
	 - public IntStream chars()
	 - public IntStream codePoints()
	 - private OfInt lambda$chars$0()
	 - private OfInt lambda$codePoints$1()
	 Declared Fields: [N/A]
 Constructors: 
 - public java.lang.String(byte[], int, int)
 - public java.lang.String(byte[], Charset)
 - public java.lang.String(byte[], String)
 - public java.lang.String(byte[], int, int, Charset)
 - public java.lang.String(byte[], int, int, String)
 - public java.lang.String(StringBuilder)
 - public java.lang.String(StringBuffer)
 - public java.lang.String(byte[])
 - public java.lang.String(int[], int, int)
 - public java.lang.String()
 - public java.lang.String(char[])
 - public java.lang.String(String)
 - public java.lang.String(char[], int, int)
 - public java.lang.String(byte[], int)
 - public java.lang.String(byte[], int, int, int)
 Declared Methods: 
 - public boolean equals(Object)
 - public String toString()
 - public int hashCode()
 - public int compareTo(String)
 - public volatile int compareTo(Object)
 - public int indexOf(String, int)
 - public int indexOf(String)
 - public int indexOf(int, int)
 - public int indexOf(int)
 - static int indexOf(char[], int, int, char[], int, int, int)
 - static int indexOf(char[], int, int, String, int)
 - public static String valueOf(int)
 - public static String valueOf(long)
 - public static String valueOf(float)
 - public static String valueOf(boolean)
 - public static String valueOf(char[])
 - public static String valueOf(char[], int, int)
 - public static String valueOf(Object)
 - public static String valueOf(char)
 - public static String valueOf(double)
 - public char charAt(int)
 - private static void checkBounds(byte[], int, int)
 - public int codePointAt(int)
 - public int codePointBefore(int)
 - public int codePointCount(int, int)
 - public int compareToIgnoreCase(String)
 - public String concat(String)
 - public boolean contains(CharSequence)
 - public boolean contentEquals(CharSequence)
 - public boolean contentEquals(StringBuffer)
 - public static String copyValueOf(char[])
 - public static String copyValueOf(char[], int, int)
 - public boolean endsWith(String)
 - public boolean equalsIgnoreCase(String)
 - public static transient String format(Locale, String, Object[])
 - public static transient String format(String, Object[])
 - public void getBytes(int, int, byte[], int)
 - public byte[] getBytes(Charset)
 - public byte[] getBytes(String) throws UnsupportedEncodingException
 - public byte[] getBytes()
 - public void getChars(int, int, char[], int)
 -  void getChars(char[], int)
 - private int indexOfSupplementary(int, int)
 - public native String intern()
 - public boolean isEmpty()
 - public static transient String join(CharSequence, CharSequence[])
 - public static String join(CharSequence, Iterable)
 - public int lastIndexOf(int)
 - public int lastIndexOf(String)
 - static int lastIndexOf(char[], int, int, String, int)
 - public int lastIndexOf(String, int)
 - public int lastIndexOf(int, int)
 - static int lastIndexOf(char[], int, int, char[], int, int, int)
 - private int lastIndexOfSupplementary(int, int)
 - public int length()
 - public boolean matches(String)
 - private boolean nonSyncContentEquals(AbstractStringBuilder)
 - public int offsetByCodePoints(int, int)
 - public boolean regionMatches(int, String, int, int)
 - public boolean regionMatches(boolean, int, String, int, int)
 - public String replace(char, char)
 - public String replace(CharSequence, CharSequence)
 - public String replaceAll(String, String)
 - public String replaceFirst(String, String)
 - public String[] split(String)
 - public String[] split(String, int)
 - public boolean startsWith(String, int)
 - public boolean startsWith(String)
 - public CharSequence subSequence(int, int)
 - public String substring(int)
 - public String substring(int, int)
 - public char[] toCharArray()
 - public String toLowerCase(Locale)
 - public String toLowerCase()
 - public String toUpperCase()
 - public String toUpperCase(Locale)
 - public String trim()
 Declared Fields: 
 - private final char[] value = char[]@7ea987ac [T, e, s, t,  , S, t, r, i, n, g]
 - private int hash = 0
 - private static final long serialVersionUID = -6849794470754667710
 - private static final ObjectStreamField[] serialPersistentFields = ObjectStreamField[]@12a3a380 []
 - public static final Comparator CASE_INSENSITIVE_ORDER = CaseInsensitiveComparator@29453f44
======================================================
